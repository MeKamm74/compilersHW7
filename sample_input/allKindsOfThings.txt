(*
  Input > 1 > 2 > 3 > -1
  OUTPUT:
  2
  105
  abc
  15
  103104105
  102103104
  101102103
  100101102
  103104105
  102103104
  101102103
  100101102
  103104105
  102103104
  101102103
  100101102
  103104105
  102103104
  101102103
  100101102
  > 1
  > 2
  > 3
  > -1
  ( 1 2 3 )
  end
*)


program easterEggHunt;

var stuff : array [1..20] of integer;
    data, max : integer;
    i, loc, x, y, z : integer;
	
procedure ifThenElseFails;
var x : integer;

begin
  x := -99;
  if x > 10 
    then write(1)
    else write(2);
  write('\')
end;

procedure assignmentSimpleRelOpsExpr;
var x,y : integer;
    b1, b2 : boolean;

begin
  x := 10;
  y := 5;
  b1 := y > x;
  b2 := not b1 and true;
  write(x,y)
end;

procedure p1a;
begin
  write('a')
end;

procedure p1b;
begin
  p1a;
  write('b')
  
end;

begin (* main *)

  ifThenElseFails;
  assignmentSimpleRelOpsExpr;
  write('\');
  p1b;
  write('c');
  write('\');
  if true 
  then if false then write(20)
			 else if true then write(15)
						  else write(10);
  
  write('\');
  x := 1; 
  while x < 5 do
  begin
    y := 4;
    while y > 0 do
    begin
      y := y - 1;
      z := 100;
      while z <> 103 do
      begin
        write(z+y);
        z := z + 1
      end;
      write('\')
    end;
    x := x + 1
  end;
  max := 0;
  (* 
    read integer input as long as it is positive and
    fits in array
  *)
  write('>',' ');
  read(data);
  while ((data >= 0) and (max < 20)) do
  begin
    max := max + 1;
    stuff[max] := data;
    write('>',' ');
    read(data)
  end;

  (* show array in sorted order *)
  write('(', ' ');
  i := 1;
  while i <= max do
  begin
    write(stuff[i], ' ');
    i := i + 1
  end;
  write(')', '\');
  
  write('e', 'n', 'd', '\')
end. 